"""Update user and todo models for API spec

Revision ID: f44707f530cc
Revises: 
Create Date: 2025-08-19 11:29:13.097280

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f44707f530cc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Handle todos table changes
    # First, copy data from is_completed to completed
    op.add_column('todos', sa.Column('completed', sa.Boolean(), nullable=True))
    op.execute("UPDATE todos SET completed = is_completed")
    op.alter_column('todos', 'completed', nullable=False)
    
    # Copy due_date to dueDate
    op.add_column('todos', sa.Column('dueDate', sa.DateTime(timezone=True), nullable=True))
    op.execute("UPDATE todos SET \"dueDate\" = due_date")
    
    # Drop old columns
    op.drop_column('todos', 'due_date')
    op.drop_column('todos', 'is_completed')
    
    # Handle users table changes
    # Copy full_name to name with default value for null entries
    op.add_column('users', sa.Column('name', sa.String(length=255), nullable=True))
    op.execute("UPDATE users SET name = COALESCE(full_name, 'User')")
    op.alter_column('users', 'name', nullable=False)
    
    # Copy avatar_url to avatar
    op.add_column('users', sa.Column('avatar', sa.Text(), nullable=True))
    op.execute("UPDATE users SET avatar = avatar_url")
    
    # Add bio column
    op.add_column('users', sa.Column('bio', sa.Text(), nullable=True))
    
    # Drop old columns and index
    op.drop_index('ix_users_username', table_name='users')
    op.drop_column('users', 'full_name')
    op.drop_column('users', 'hashed_password')
    op.drop_column('users', 'is_verified')
    op.drop_column('users', 'avatar_url')
    op.drop_column('users', 'username')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('avatar_url', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('hashed_password', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('full_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.create_index('ix_users_username', 'users', ['username'], unique=False)
    op.drop_column('users', 'bio')
    op.drop_column('users', 'avatar')
    op.drop_column('users', 'name')
    op.add_column('todos', sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('todos', sa.Column('due_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.drop_column('todos', 'dueDate')
    op.drop_column('todos', 'completed')
    # ### end Alembic commands ###
