"""Update models to match backend schema exactly

Revision ID: 35be4660a96f
Revises: a07006aadb2a
Create Date: 2025-08-19 13:25:35.667496

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '35be4660a96f'
down_revision = 'a07006aadb2a'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('todos', sa.Column('userId', sa.String(length=36), nullable=False))
    op.add_column('todos', sa.Column('createdAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('todos', sa.Column('updatedAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.alter_column('todos', 'category',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=20),
               existing_nullable=False)
    op.alter_column('todos', 'dueDate',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.drop_index('ix_todos_category', table_name='todos')
    op.drop_index('ix_todos_title', table_name='todos')
    op.drop_index('ix_todos_user_id', table_name='todos')
    op.create_index(op.f('ix_todos_userId'), 'todos', ['userId'], unique=False)
    op.create_unique_constraint(None, 'todos', ['title'])
    op.drop_constraint('todos_user_id_fkey', 'todos', type_='foreignkey')
    op.create_foreign_key(None, 'todos', 'users', ['userId'], ['id'])
    op.drop_column('todos', 'user_id')
    op.drop_column('todos', 'created_at')
    op.drop_column('todos', 'updated_at')
    op.add_column('users', sa.Column('password', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('refreshToken', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('createdAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.drop_index('ix_users_google_id', table_name='users')
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'google_id')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'updated_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('google_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.create_index('ix_users_google_id', 'users', ['google_id'], unique=False)
    op.drop_column('users', 'createdAt')
    op.drop_column('users', 'refreshToken')
    op.drop_column('users', 'password')
    op.add_column('todos', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('todos', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('todos', sa.Column('user_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'todos', type_='foreignkey')
    op.create_foreign_key('todos_user_id_fkey', 'todos', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'todos', type_='unique')
    op.drop_index(op.f('ix_todos_userId'), table_name='todos')
    op.create_index('ix_todos_user_id', 'todos', ['user_id'], unique=False)
    op.create_index('ix_todos_title', 'todos', ['title'], unique=False)
    op.create_index('ix_todos_category', 'todos', ['category'], unique=False)
    op.alter_column('todos', 'dueDate',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('todos', 'category',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.drop_column('todos', 'updatedAt')
    op.drop_column('todos', 'createdAt')
    op.drop_column('todos', 'userId')
    # ### end Alembic commands ###
